[{"path":"https://ghurault.github.io/HuraultMisc/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 HuraultMisc authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Guillem Hurault. Author, maintainer.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hurault G (2025). HuraultMisc: Guillem Hurault Functions' Library. R package version 1.2.1.9000, https://ghurault.github.io/HuraultMisc/.","code":"@Manual{,   title = {HuraultMisc: Guillem Hurault Functions' Library},   author = {Guillem Hurault},   year = {2025},   note = {R package version 1.2.1.9000},   url = {https://ghurault.github.io/HuraultMisc/}, }"},{"path":"https://ghurault.github.io/HuraultMisc/index.html","id":"huraultmisc","dir":"","previous_headings":"","what":"Guillem Hurault Functions' Library","title":"Guillem Hurault Functions' Library","text":"HuraultMisc personal R package regrouping functions used across different projects. library mostly provides functions data analysis.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Guillem Hurault Functions' Library","text":"install currently released version package CRAN, please type following commands R: Alternatively, can install development version :","code":"install.packages(\"HuraultMisc\") devtools::install_github(\"ghurault/HuraultMisc\")"},{"path":"https://ghurault.github.io/HuraultMisc/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Guillem Hurault Functions' Library","text":"package can loaded library(HuraultMisc) list available functions documentation can accessed package website, using command help(package = HuraultMisc).","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/HuraultMisc-package.html","id":null,"dir":"Reference","previous_headings":"","what":"HuraultMisc: Guillem Hurault Functions' Library — HuraultMisc-package","title":"HuraultMisc: Guillem Hurault Functions' Library — HuraultMisc-package","text":"Contains various functions data analysis, notably helpers diagnostics Bayesian modelling using Stan.","code":""},{"path":[]},{"path":"https://ghurault.github.io/HuraultMisc/reference/HuraultMisc-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"HuraultMisc: Guillem Hurault Functions' Library — HuraultMisc-package","text":"Maintainer: Guillem Hurault ghurault.dev@outlook.com (ORCID)","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/PPC_group_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Predictive Check for Stan model — PPC_group_distribution","title":"Posterior Predictive Check for Stan model — PPC_group_distribution","text":"Plot distribution density parameters within group single/multiple draw posterior distribution. case hierarchical model, might look distribution patient parameter compare prior population distribution.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/PPC_group_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Predictive Check for Stan model — PPC_group_distribution","text":"","code":"PPC_group_distribution(obj, parName = \"\", nDraws = 1)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/PPC_group_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Predictive Check for Stan model — PPC_group_distribution","text":"obj Matrix (rows: samples, cols: parameter) Stanfit object. parName Name observation-dependent (e.g. patient-dependent) parameter consider (optional obj matrix). nDraws Number draws plot","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/PPC_group_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Predictive Check for Stan model — PPC_group_distribution","text":"Ggplot distribution","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/PPC_group_distribution.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Posterior Predictive Check for Stan model — PPC_group_distribution","text":". Gelman, J. B. B. Carlin, H. S. S. Stern, D. B. B. Rubin, Bayesian Data Analysis (Chapter 6), Third Edition, 2014.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/PPC_group_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Predictive Check for Stan model — PPC_group_distribution","text":"","code":"X <- matrix(rnorm(1e3), ncol = 10) PPC_group_distribution(X, \"\", 10)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/approx_equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate equal — approx_equal","title":"Approximate equal — approx_equal","text":"Compute whether x y approximately equal given tolerance level","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/approx_equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate equal — approx_equal","text":"","code":"approx_equal(x, y, tol = .Machine$double.eps^0.5)  x %~% y"},{"path":"https://ghurault.github.io/HuraultMisc/reference/approx_equal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate equal — approx_equal","text":"x Numeric scalar. y Numeric scalar. tol Tolerance.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/approx_equal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate equal — approx_equal","text":"Boolean","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/approx_equal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximate equal — approx_equal","text":"","code":"approx_equal(1, 1) #> [1] TRUE 1 %~% (1 + 1e-16) #> [1] TRUE 1 %~% 1.01 #> [1] FALSE"},{"path":"https://ghurault.github.io/HuraultMisc/reference/cbbPalette.html","id":null,"dir":"Reference","previous_headings":"","what":"A colour blind friendly palette (with black) — cbbPalette","title":"A colour blind friendly palette (with black) — cbbPalette","text":"Shortcut c(\"#000000\", \"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\").","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/cbbPalette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A colour blind friendly palette (with black) — cbbPalette","text":"","code":"cbbPalette"},{"path":"https://ghurault.github.io/HuraultMisc/reference/cbbPalette.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A colour blind friendly palette (with black) — cbbPalette","text":"object class character length 8.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/cbbPalette.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A colour blind friendly palette (with black) — cbbPalette","text":"Cookbook R","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/cbbPalette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A colour blind friendly palette (with black) — cbbPalette","text":"","code":"library(ggplot2) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union df <- data.frame(palette = HuraultMisc::cbbPalette) %>%   mutate(palette = factor(palette, levels = palette))  ggplot(data = df, aes(x = palette, fill = palette, y = 0)) +   geom_tile() +   scale_fill_manual(values = levels(df$palette)) +   coord_cartesian(expand = FALSE) +   labs(x = \"\", y = \"\") +   theme_classic(base_size = 15) +   theme(legend.position = \"none\")"},{"path":"https://ghurault.github.io/HuraultMisc/reference/change_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Change column names of a dataframe — change_colnames","title":"Change column names of a dataframe — change_colnames","text":"Change column names dataframe","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/change_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change column names of a dataframe — change_colnames","text":"","code":"change_colnames(df, current_names, new_names)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/change_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change column names of a dataframe — change_colnames","text":"df Dataframe current_names Vector column names change. new_names Vector new names.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/change_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change column names of a dataframe — change_colnames","text":"Dataframe new column names","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/change_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change column names of a dataframe — change_colnames","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(A = 1:2, B = 3:4, C = 5:6) df <- change_colnames(df, c(\"A\", \"C\"), c(\"Aa\", \"Cc\")) } # }"},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_RPS.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute RPS for a single forecast — compute_RPS","title":"Compute RPS for a single forecast — compute_RPS","text":"Compute RPS single forecast","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_RPS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute RPS for a single forecast — compute_RPS","text":"","code":"compute_RPS(forecast, outcome)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_RPS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute RPS for a single forecast — compute_RPS","text":"forecast Vector length N (forecast). outcome Index true outcome (1 N).","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_RPS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute RPS for a single forecast — compute_RPS","text":"RPS (numeric scalar)","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_RPS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute RPS for a single forecast — compute_RPS","text":"","code":"compute_RPS(c(.2, .5, .3), 2) #> [1] 0.065"},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate calibration given forecasts and corresponding outcomes — compute_calibration","title":"Estimate calibration given forecasts and corresponding outcomes — compute_calibration","text":"Estimate calibration given forecasts corresponding outcomes","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate calibration given forecasts and corresponding outcomes — compute_calibration","text":"","code":"compute_calibration(   forecast,   outcome,   method = c(\"smoothing\", \"binning\"),   CI = NULL,   binwidth = NULL,   ... )"},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate calibration given forecasts and corresponding outcomes — compute_calibration","text":"forecast Vector probability forecasts. outcome Vector observations (0 1). method Method used estimate calibration, either \"smoothing\" \"binning\". CI Confidence level (e.g. 0.95). CI computed NULL (CI can expensive compute LOWESS). binwidth Binwidth calibration estimated binning. NULL, automatic bin width selection Sturges' method. ... Arguments stats::loess() function (e.g. span).","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_calibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate calibration given forecasts and corresponding outcomes — compute_calibration","text":"Dataframe columns Forecast (bins), Frequency (frequency outcomes bin), Lower (lower bound CI) Upper (upper bound CI).","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_calibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate calibration given forecasts and corresponding outcomes — compute_calibration","text":"","code":"N <- 1e4 f <- rbeta(N, 1, 1) o <- sapply(f, function(x) {   rbinom(1, 1, x) }) lapply(   c(\"binning\", \"smoothing\"),   function(m) {     cal <- compute_calibration(f, o, method = m)     with(cal, plot(Forecast, Frequency, type = \"l\"))     abline(c(0, 1), col = \"red\")   } )   #> [[1]] #> NULL #>  #> [[2]] #> NULL #>"},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_resolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute resolution of forecasts, normalised by the uncertainty — compute_resolution","title":"Compute resolution of forecasts, normalised by the uncertainty — compute_resolution","text":"resolution computed mean squared distance base rate (reference forecast) normalised uncertainty (maximum resolution). means output 0 1, 1 corresponding maximum resolution.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_resolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute resolution of forecasts, normalised by the uncertainty — compute_resolution","text":"","code":"compute_resolution(f, p0)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_resolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute resolution of forecasts, normalised by the uncertainty — compute_resolution","text":"f Vector forecasts p0 Vector base rate. case rate usually prevalence uniform forecast (e.g. 1 / number categories) can depend observation (hence vector).","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_resolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute resolution of forecasts, normalised by the uncertainty — compute_resolution","text":"Vector resolution values","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_resolution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute resolution of forecasts, normalised by the uncertainty — compute_resolution","text":"","code":"compute_resolution(seq(0, 1, .1), 0.5) #> [1] 0.4"},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_rsquared.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Bayesian R-squared from matrix of posterior replications — compute_rsquared","title":"Compute Bayesian R-squared from matrix of posterior replications — compute_rsquared","text":"function returns global estimate rather estimate sample, since predictive means residual variance estimated replications instead computed per-sample basis.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_rsquared.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Bayesian R-squared from matrix of posterior replications — compute_rsquared","text":"","code":"compute_rsquared(yrep)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_rsquared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Bayesian R-squared from matrix of posterior replications — compute_rsquared","text":"yrep Matrix rows representing samples columns representing observations","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_rsquared.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Bayesian R-squared from matrix of posterior replications — compute_rsquared","text":"Bayesian R-squared (scalar, 0 1)","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_rsquared.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Bayesian R-squared from matrix of posterior replications — compute_rsquared","text":"Gelman, . et al. (2019) \"R-squared Bayesian Regression Models\", American Statistician, 73(3), pp. 307–309. doi:10.1080/00031305.2018.1549100 .","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/compute_rsquared.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Bayesian R-squared from matrix of posterior replications — compute_rsquared","text":"","code":"N <- 50 N_sample <- 1e2 y <- runif(N, 0, 10) yrep <- do.call(   cbind,   lapply(     1:N,     function(i) {       y[i] + rnorm(N_sample)     }   ) ) compute_rsquared(yrep) #> [1] 0.8969546"},{"path":"https://ghurault.github.io/HuraultMisc/reference/coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Coverage probability — coverage","title":"Coverage probability — coverage","text":"Compute plot coverage CI different confidence level. Useful fake data check.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coverage probability — coverage","text":"","code":"compute_coverage(   post_samples,   truth,   CI = seq(0, 1, 0.05),   type = c(\"eti\", \"hdi\") )  plot_coverage(   post_samples,   truth,   CI = seq(0, 1, 0.05),   type = c(\"eti\", \"hdi\") )"},{"path":"https://ghurault.github.io/HuraultMisc/reference/coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coverage probability — coverage","text":"post_samples Matrix posterior samples. Rows represent sample columns represent variables. truth Vector true parameter values (length number columns post_samples). CI Vector confidence levels. type Type confidence intervals: either \"eti\" (equal-tailed intervals) \"hdi\" (highest density intervals).","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coverage probability — coverage","text":"compute_coverage returns Dataframe containing coverage (95% uncertainty interval coverage) different confidence level (nominal coverage). plot_coverage returns ggplot coverage function nominal coverage 95% uncertainty interval.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coverage probability — coverage","text":"","code":"N <- 100 N_post <- 1e3 truth <- rep(0, N) post_samples <- sapply(rnorm(N, 0, 1), function(x) {   rnorm(N_post, x, 1) })  compute_coverage(post_samples, truth) #> # A tibble: 21 × 4 #>    Nominal Coverage  Lower  Upper #>      <dbl>    <dbl>  <dbl>  <dbl> #>  1    0        0    0      0      #>  2    0.05     0.04 0.0110 0.0993 #>  3    0.1      0.09 0.0420 0.164  #>  4    0.15     0.17 0.102  0.258  #>  5    0.2      0.22 0.143  0.314  #>  6    0.25     0.3  0.212  0.400  #>  7    0.3      0.32 0.230  0.421  #>  8    0.35     0.38 0.285  0.483  #>  9    0.4      0.42 0.322  0.523  #> 10    0.45     0.49 0.389  0.592  #> # ℹ 11 more rows plot_coverage(post_samples, truth)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/empirical_pval.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute empirical p-values — empirical_pval","title":"Compute empirical p-values — empirical_pval","text":"Compute empirical p-values","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/empirical_pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute empirical p-values — empirical_pval","text":"","code":"empirical_pval(t_rep, t, alternative = c(\"two.sided\", \"less\", \"greater\"))"},{"path":"https://ghurault.github.io/HuraultMisc/reference/empirical_pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute empirical p-values — empirical_pval","text":"t_rep Vector samples distribution. t Observation (numeric scalar). alternative Indicates alternative hypothesis: must one \"two.sided\", \"greater\" \"less\".","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/empirical_pval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute empirical p-values — empirical_pval","text":"Empirical p-value.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/empirical_pval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute empirical p-values — empirical_pval","text":"","code":"empirical_pval(rnorm(1e2), 2) #> [1] 0.05940594"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract confidence intervals from a vector of samples — extract_ci","title":"Extract confidence intervals from a vector of samples — extract_ci","text":"Extract confidence intervals vector samples","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract confidence intervals from a vector of samples — extract_ci","text":"","code":"extract_ci(x, CI_level = seq(0.1, 0.9, 0.1), type = c(\"eti\", \"hdi\"))"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract confidence intervals from a vector of samples — extract_ci","text":"x Vector samples distribution. CI_level Vector containing level confidence/credible intervals. type \"eti\" equal-tailed intervals \"hdi\" highest density intervals.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract confidence intervals from a vector of samples — extract_ci","text":"Dataframe columns: Lower, Upper, Level.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract confidence intervals from a vector of samples — extract_ci","text":"","code":"x <- rexp(1e4) extract_ci(x, type = \"eti\") #>          Lower     Upper Level #> 45% 0.60429677 0.8048989   0.1 #> 40% 0.51348024 0.9194756   0.2 #> 35% 0.43656849 1.0590203   0.3 #> 30% 0.35796380 1.2174887   0.4 #> 25% 0.28221729 1.4014074   0.5 #> 20% 0.21883635 1.6290178   0.6 #> 15% 0.16051743 1.9467274   0.7 #> 10% 0.10518431 2.3381349   0.8 #> 5%  0.05083657 3.0634668   0.9 extract_ci(x, type = \"hdi\") #>          Lower     Upper Level #> 1 9.466778e-03 0.1128918   0.1 #> 2 7.768045e-03 0.2259538   0.2 #> 3 2.992155e-03 0.3597081   0.3 #> 4 2.840767e-05 0.5135054   0.4 #> 5 1.344425e-03 0.7028017   0.5 #> 6 2.840767e-05 0.9196154   0.6 #> 7 5.498014e-05 1.2178687   0.7 #> 8 2.840767e-05 1.6290190   0.8 #> 9 5.498014e-05 2.3397944   0.9"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a distribution represented by samples — extract_distribution","title":"Extract a distribution represented by samples — extract_distribution","text":"distribution can extracted : probability density function (type = \"continuous\"), cf. extract_pdf(). probability mass function (type = \"discrete\"), cf. extract_pmf(). series equal-tailed confidence/credible intervals (type = \"eti\"), cf. extract_ci(). series highest density confidence/credible intervals (type = \"hdi\"), cf. extract_ci().","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a distribution represented by samples — extract_distribution","text":"","code":"extract_distribution(   object,   parName = \"\",   type = c(\"continuous\", \"discrete\", \"eti\", \"hdi\"),   transform = identity,   ... )"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a distribution represented by samples — extract_distribution","text":"object Object specifying distribution samples: can Stanfit object, matrix (columns represents parameters, rows samples) vector. parName Name parameter extract. type Indicates distribution summarised. transform Function apply samples. ... Arguments pass extract_pmf(), extract_pdf() extract_ci() depending type.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a distribution represented by samples — extract_distribution","text":"Dataframe. columns depends method used (see specific function details).","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_distribution.html","id":"alternative","dir":"Reference","previous_headings":"","what":"Alternative","title":"Extract a distribution represented by samples — extract_distribution","text":"function can notably used prepare data plotting fan charts type = \"eti\" \"hdi\". case, ggdist package offers alternative ggdist::stat_lineribbon().","code":""},{"path":[]},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a distribution represented by samples — extract_distribution","text":"","code":"extract_distribution(runif(1e2), type = \"continuous\", support = c(0, 1)) #>           Value   Density Index Variable #> 1   0.000000000 0.4168469    NA          #> 2   0.007874016 0.4402654    NA          #> 3   0.015748031 0.4633719    NA          #> 4   0.023622047 0.4860562    NA          #> 5   0.031496063 0.5082338    NA          #> 6   0.039370079 0.5298304    NA          #> 7   0.047244094 0.5507811    NA          #> 8   0.055118110 0.5710347    NA          #> 9   0.062992126 0.5906008    NA          #> 10  0.070866142 0.6094878    NA          #> 11  0.078740157 0.6277254    NA          #> 12  0.086614173 0.6453371    NA          #> 13  0.094488189 0.6624223    NA          #> 14  0.102362205 0.6790644    NA          #> 15  0.110236220 0.6953581    NA          #> 16  0.118110236 0.7114011    NA          #> 17  0.125984252 0.7273095    NA          #> 18  0.133858268 0.7431898    NA          #> 19  0.141732283 0.7591384    NA          #> 20  0.149606299 0.7752446    NA          #> 21  0.157480315 0.7915810    NA          #> 22  0.165354331 0.8081887    NA          #> 23  0.173228346 0.8250885    NA          #> 24  0.181102362 0.8422760    NA          #> 25  0.188976378 0.8597213    NA          #> 26  0.196850394 0.8773450    NA          #> 27  0.204724409 0.8950502    NA          #> 28  0.212598425 0.9127125    NA          #> 29  0.220472441 0.9301684    NA          #> 30  0.228346457 0.9472460    NA          #> 31  0.236220472 0.9637594    NA          #> 32  0.244094488 0.9795121    NA          #> 33  0.251968504 0.9942713    NA          #> 34  0.259842520 1.0078377    NA          #> 35  0.267716535 1.0200447    NA          #> 36  0.275590551 1.0307240    NA          #> 37  0.283464567 1.0397037    NA          #> 38  0.291338583 1.0468319    NA          #> 39  0.299212598 1.0520845    NA          #> 40  0.307086614 1.0554203    NA          #> 41  0.314960630 1.0568341    NA          #> 42  0.322834646 1.0562863    NA          #> 43  0.330708661 1.0539484    NA          #> 44  0.338582677 1.0499431    NA          #> 45  0.346456693 1.0444288    NA          #> 46  0.354330709 1.0375564    NA          #> 47  0.362204724 1.0295887    NA          #> 48  0.370078740 1.0207820    NA          #> 49  0.377952756 1.0113926    NA          #> 50  0.385826772 1.0016841    NA          #> 51  0.393700787 0.9919402    NA          #> 52  0.401574803 0.9824303    NA          #> 53  0.409448819 0.9734058    NA          #> 54  0.417322835 0.9651113    NA          #> 55  0.425196850 0.9577991    NA          #> 56  0.433070866 0.9516290    NA          #> 57  0.440944882 0.9467616    NA          #> 58  0.448818898 0.9433283    NA          #> 59  0.456692913 0.9414994    NA          #> 60  0.464566929 0.9412841    NA          #> 61  0.472440945 0.9427112    NA          #> 62  0.480314961 0.9457859    NA          #> 63  0.488188976 0.9505325    NA          #> 64  0.496062992 0.9568744    NA          #> 65  0.503937008 0.9647065    NA          #> 66  0.511811024 0.9739290    NA          #> 67  0.519685039 0.9844421    NA          #> 68  0.527559055 0.9961152    NA          #> 69  0.535433071 1.0087572    NA          #> 70  0.543307087 1.0222031    NA          #> 71  0.551181102 1.0362801    NA          #> 72  0.559055118 1.0508147    NA          #> 73  0.566929134 1.0655930    NA          #> 74  0.574803150 1.0804251    NA          #> 75  0.582677165 1.0951210    NA          #> 76  0.590551181 1.1094737    NA          #> 77  0.598425197 1.1233004    NA          #> 78  0.606299213 1.1364288    NA          #> 79  0.614173228 1.1486929    NA          #> 80  0.622047244 1.1599102    NA          #> 81  0.629921260 1.1699344    NA          #> 82  0.637795276 1.1786672    NA          #> 83  0.645669291 1.1860046    NA          #> 84  0.653543307 1.1918448    NA          #> 85  0.661417323 1.1960847    NA          #> 86  0.669291339 1.1987388    NA          #> 87  0.677165354 1.1997908    NA          #> 88  0.685039370 1.1992461    NA          #> 89  0.692913386 1.1970623    NA          #> 90  0.700787402 1.1933589    NA          #> 91  0.708661417 1.1882067    NA          #> 92  0.716535433 1.1816900    NA          #> 93  0.724409449 1.1738691    NA          #> 94  0.732283465 1.1648809    NA          #> 95  0.740157480 1.1548605    NA          #> 96  0.748031496 1.1439276    NA          #> 97  0.755905512 1.1321886    NA          #> 98  0.763779528 1.1197589    NA          #> 99  0.771653543 1.1067674    NA          #> 100 0.779527559 1.0933093    NA          #> 101 0.787401575 1.0794640    NA          #> 102 0.795275591 1.0652870    NA          #> 103 0.803149606 1.0508373    NA          #> 104 0.811023622 1.0361385    NA          #> 105 0.818897638 1.0211934    NA          #> 106 0.826771654 1.0059724    NA          #> 107 0.834645669 0.9904437    NA          #> 108 0.842519685 0.9745519    NA          #> 109 0.850393701 0.9582247    NA          #> 110 0.858267717 0.9413608    NA          #> 111 0.866141732 0.9238639    NA          #> 112 0.874015748 0.9056464    NA          #> 113 0.881889764 0.8866102    NA          #> 114 0.889763780 0.8666482    NA          #> 115 0.897637795 0.8456513    NA          #> 116 0.905511811 0.8235813    NA          #> 117 0.913385827 0.8003861    NA          #> 118 0.921259843 0.7760345    NA          #> 119 0.929133858 0.7504647    NA          #> 120 0.937007874 0.7237521    NA          #> 121 0.944881890 0.6959439    NA          #> 122 0.952755906 0.6671139    NA          #> 123 0.960629921 0.6373342    NA          #> 124 0.968503937 0.6067562    NA          #> 125 0.976377953 0.5755398    NA          #> 126 0.984251969 0.5438510    NA          #> 127 0.992125984 0.5118680    NA          #> 128 1.000000000 0.4797936    NA"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters' draws — extract_draws","title":"Extract parameters' draws — extract_draws","text":"Extract parameters' draws","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters' draws — extract_draws","text":"","code":"extract_draws(obj, draws)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters' draws — extract_draws","text":"obj Array/Vector/Matrix draws (cf. first dimension) list . draws Vector draws extract.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract parameters' draws — extract_draws","text":"Dataframe columns: Draw, Index, Value Parameter.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract parameters' draws — extract_draws","text":"","code":"x <- rnorm(1e3) X <- matrix(x, ncol = 10) a <- array(rnorm(80), dim = c(10, 2, 2, 2)) extract_draws(x, sample(1:length(x), 10)) #>    Draw Index      Value Parameter #> 1   822    NA  2.2224587           #> 2   262    NA -1.1923732           #> 3   108    NA  1.0717368           #> 4   376    NA -0.1464564           #> 5   330    NA -0.3640846           #> 6   488    NA -0.7806759           #> 7   247    NA -0.6757397           #> 8   406    NA  0.2403175           #> 9   778    NA -1.0893823           #> 10  715    NA -1.0148679           extract_draws(X, sample(1:nrow(X), 10)) %>% head() #>   Draw Index       Value Parameter #> 1   63     1  0.79545121           #> 2   25     1  0.19289988           #> 3   77     1 -0.23992836           #> 4   74     1 -0.48430317           #> 5   94     1  1.25177858           #> 6   55     1 -0.09720455           extract_draws(a, sample(1:10, 5)) %>% head() #>    Draw       Value Index Parameter #> 1     1 -0.04495294    NA   [1,1,1] #> 4     4 -1.35775429    NA   [1,1,1] #> 7     7 -0.56766973    NA   [1,1,1] #> 9     9  0.32367786    NA   [1,1,1] #> 10   10  0.86817330    NA   [1,1,1] #> 11    1 -0.60429145    NA   [2,1,1] extract_draws(list(x = x, X = X, a = a), 1:10) %>% head() #>   Draw Index       Value Parameter #> 1    1    NA -0.08531927         x #> 2    2    NA  0.74911722         x #> 3    3    NA  0.44072593         x #> 4    4    NA  0.13282516         x #> 5    5    NA  1.85330059         x #> 6    6    NA -0.41630264         x"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_index_nd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract multiple indices inside bracket(s) as a list — extract_index_nd","title":"Extract multiple indices inside bracket(s) as a list — extract_index_nd","text":"Extract multiple indices inside bracket(s) list","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_index_nd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract multiple indices inside bracket(s) as a list — extract_index_nd","text":"","code":"extract_index_nd(x, dim_names = NULL)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_index_nd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract multiple indices inside bracket(s) as a list — extract_index_nd","text":"x Character vector. dim_names Optional character vector dimension names. dim_names NULL, elements x number indices, missing indices set NA.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_index_nd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract multiple indices inside bracket(s) as a list — extract_index_nd","text":"Dataframe columns: Variable, containing x brackets removed Index, list containing values within brackets. dim_names NULL, Index replaced columns names dim_names containing numeric values.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_index_nd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract multiple indices inside bracket(s) as a list — extract_index_nd","text":"","code":"extract_index_nd(c(\"sigma\", \"sigma[1]\", \"sigma[1, 1]\", \"sigma[1][2]\")) #>   Variable Index #> 1    sigma    NA #> 2    sigma     1 #> 3    sigma  1, 1 #> 4    sigma  1, 2"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_parameters_from_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters from a single draw — extract_parameters_from_draw","title":"Extract parameters from a single draw — extract_parameters_from_draw","text":"Extract parameters single draw","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_parameters_from_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters from a single draw — extract_parameters_from_draw","text":"","code":"extract_parameters_from_draw(fit, param, draw)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_parameters_from_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters from a single draw — extract_parameters_from_draw","text":"fit Stanfit object. param Vector parameter names. draw Index draw extract parameters .","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_parameters_from_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract parameters from a single draw — extract_parameters_from_draw","text":"Dataframe","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_parameters_from_draw.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract parameters from a single draw — extract_parameters_from_draw","text":"Useful generate fake data.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_parameters_from_draw.html","id":"alternative","dir":"Reference","previous_headings":"","what":"Alternative","title":"Extract parameters from a single draw — extract_parameters_from_draw","text":"'tidybayes' package offers alternative function, example: fit %>% tidy_draws() %>% gather_variables() %>% filter(.draw == draw & .variable %% param) However, 'tidybayes' version less efficient draws parameters extracted filtered (also draw IDs ). Using 'tidybayes' recommended want extract specific parameters, matter draw extracted (case using tidybayes::spread_draws()).","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract probability density function from vector of samples — extract_pdf","title":"Extract probability density function from vector of samples — extract_pdf","text":"Extract probability density function vector samples","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract probability density function from vector of samples — extract_pdf","text":"","code":"extract_pdf(x, support = NULL, n_density = 2^7)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract probability density function from vector of samples — extract_pdf","text":"x Vector samples distribution. support Vector length 2 corresponding range distribution. Can NULL. n_density Number equally spaced points density estimated (better use power 2).","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract probability density function from vector of samples — extract_pdf","text":"Dataframe columns: Value, Density.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_pdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract probability density function from vector of samples — extract_pdf","text":"","code":"extract_pdf(rnorm(1e3)) %>% head() #> Warning: support is NULL, taking the range: -2.82552732836382, 2.98762607106799 #>       Value     Density #> 1 -2.825527 0.009668441 #> 2 -2.779754 0.010918358 #> 3 -2.733982 0.012171388 #> 4 -2.688209 0.013440794 #> 5 -2.642436 0.014751383 #> 6 -2.596663 0.016135277"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_pmf.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract probability mass function from vector of samples — extract_pmf","title":"Extract probability mass function from vector of samples — extract_pmf","text":"Extract probability mass function vector samples","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_pmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract probability mass function from vector of samples — extract_pmf","text":"","code":"extract_pmf(x, support = NULL)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_pmf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract probability mass function from vector of samples — extract_pmf","text":"x Vector samples distribution. support Vector possible values distribution can take. Can NULL.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_pmf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract probability mass function from vector of samples — extract_pmf","text":"Dataframe columns: Value, Probability.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/extract_pmf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract probability mass function from vector of samples — extract_pmf","text":"","code":"extract_pmf(round(rnorm(1e3, 0, 10))) %>% head() #> Warning: support is NULL, taking the following values: -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 #>   Value Probability #> 1   -30       0.001 #> 2   -29       0.000 #> 3   -28       0.000 #> 4   -27       0.001 #> 5   -26       0.001 #> 6   -25       0.001"},{"path":"https://ghurault.github.io/HuraultMisc/reference/factor_to_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the type of the column of a dataframe from factor to numeric — factor_to_numeric","title":"Change the type of the column of a dataframe from factor to numeric — factor_to_numeric","text":"Change type column dataframe factor numeric","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/factor_to_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the type of the column of a dataframe from factor to numeric — factor_to_numeric","text":"","code":"factor_to_numeric(df, factor_name)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/factor_to_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the type of the column of a dataframe from factor to numeric — factor_to_numeric","text":"df Dataframe. factor_name Vector names factors change numeric.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/factor_to_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the type of the column of a dataframe from factor to numeric — factor_to_numeric","text":"dataframe type given columns changed numeric.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/factor_to_numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the type of the column of a dataframe from factor to numeric — factor_to_numeric","text":"","code":"df <- data.frame(A = rep(1:5, each = 10)) df$A <- factor(df$A) str(df) #> 'data.frame':\t50 obs. of  1 variable: #>  $ A: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 1 1 1 1 1 1 1 1 ... df <- factor_to_numeric(df, \"A\") str(df) #> 'data.frame':\t50 obs. of  1 variable: #>  $ A: num  1 1 1 1 1 1 1 1 1 1 ..."},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether x is of length 1 — is_scalar","title":"Test whether x is of length 1 — is_scalar","text":"Test whether x length 1","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether x is of length 1 — is_scalar","text":"","code":"is_scalar(x)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test whether x is of length 1 — is_scalar","text":"x Object tested.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test whether x is of length 1 — is_scalar","text":"Logical","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_scalar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test whether x is of length 1 — is_scalar","text":"","code":"is_scalar(1) # TRUE #> [1] TRUE is_scalar(\"a\") # TRUE #> [1] TRUE is_scalar(c(1, 2)) # FALSE #> [1] FALSE"},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_stanfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether an object is of class ","title":"Test whether an object is of class ","text":"Test whether object class \"stanfit\"","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_stanfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether an object is of class ","text":"","code":"is_stanfit(obj)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_stanfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test whether an object is of class ","text":"obj Object.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_stanfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test whether an object is of class ","text":"Boolean","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_wholenumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether x is a whole number — is_wholenumber","title":"Test whether x is a whole number — is_wholenumber","text":"is_wholenumber() uses base::round() test whether x whole number, therefore issue error x mode numeric. used base::stopifnot() example, problem may conditionals. is_scalar_wholenumber() comes additional argument check_numeric check whether x numeric checking whole number.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_wholenumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether x is a whole number — is_wholenumber","text":"","code":"is_wholenumber(x, tol = .Machine$double.eps^0.5)  is_scalar_wholenumber(x, check_numeric = TRUE, ...)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_wholenumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test whether x is a whole number — is_wholenumber","text":"x Object tested tol Tolerance check_numeric Whether check whether x numeric ... Arguments pass is_wholenumber()","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_wholenumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test whether x is a whole number — is_wholenumber","text":"Logical","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/is_wholenumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test whether x is a whole number — is_wholenumber","text":"","code":"is_wholenumber(1) # TRUE #> [1] TRUE is_wholenumber(1.0) # TRUE #> [1] TRUE is_wholenumber(1.1) # FALSE #> [1] FALSE is_scalar_wholenumber(1) # TRUE #> [1] TRUE is_scalar_wholenumber(c(1, 2)) # FALSE #> [1] FALSE"},{"path":"https://ghurault.github.io/HuraultMisc/reference/logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Logit and Inverse logit — logit","title":"Logit and Inverse logit — logit","text":"Logit Inverse logit","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logit and Inverse logit — logit","text":"","code":"logit(x)  inv_logit(x)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logit and Inverse logit — logit","text":"x Numeric vector.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logit and Inverse logit — logit","text":"Numeric vector.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logit and Inverse logit — logit","text":"","code":"logit(0.5) #> [1] 0 inv_logit(0) #> [1] 0.5"},{"path":"https://ghurault.github.io/HuraultMisc/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ghurault.github.io/HuraultMisc/reference/post_pred_pval.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Predictive p-value — post_pred_pval","title":"Posterior Predictive p-value — post_pred_pval","text":"Compute plot posterior predictive p-value (Bayesian p-value) samples distribution. simulations observations first summarised test statistics, test statistic observations compared test statistic empirical distribution.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/post_pred_pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Predictive p-value — post_pred_pval","text":"","code":"post_pred_pval(   yrep,   y,   test_statistic = mean,   alternative = c(\"two.sided\", \"less\", \"greater\"),   plot = FALSE )"},{"path":"https://ghurault.github.io/HuraultMisc/reference/post_pred_pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Predictive p-value — post_pred_pval","text":"yrep Matrix posterior replications rows corresponding samples columns simulated observations. y Vector observations. test_statistic Function test statistic compute p-value . alternative Indicates alternative hypothesis: must one \"two.sided\", \"greater\" \"less\". plot Whether output plot visualising distribution test statistic.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/post_pred_pval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Predictive p-value — post_pred_pval","text":"List containing p-value (optionally) ggplot.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/post_pred_pval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Predictive p-value — post_pred_pval","text":"","code":"post_pred_pval(matrix(rnorm(1e3), ncol = 10), rnorm(10), plot = TRUE) #> $pval #> [1] 0.2178218 #>  #> $plot  #>"},{"path":"https://ghurault.github.io/HuraultMisc/reference/prior_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare prior to posterior — prior_posterior","title":"Compare prior to posterior — prior_posterior","text":"combine_prior_posterior subsets binds prior posterior dataframes. plot_prior_posterior plots posterior CI alongside prior CI. compute_prior_influence computes diagnostics posterior influenced prior. plot_prior_influence plots diagnostics compute_prior_influence. check_model_sensitivity deprecated alias plot_prior_influence.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/prior_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare prior to posterior — prior_posterior","text":"","code":"combine_prior_posterior(prior, post, pars = NULL, match_exact = TRUE)  plot_prior_posterior(   prior,   post,   pars = NULL,   match_exact = TRUE,   lb = \"5%\",   ub = \"95%\" )  compute_prior_influence(   prior,   post,   pars = NULL,   match_exact = TRUE,   remove_index_prior = TRUE )  plot_prior_influence(prior, post, pars = NULL, match_exact = TRUE)  check_model_sensitivity(prior, post, pars = NULL)"},{"path":"https://ghurault.github.io/HuraultMisc/reference/prior_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare prior to posterior — prior_posterior","text":"prior Dataframe prior parameter estimates. dataframe expected columns Variable, Mean. plot_prior_posterior(), columns lb ub also present. compute_prior_influence() plot_prior_influence(), columns Index sd also present. post Dataframe posterior parameter estimates, columns prior. pars Vector parameter names plot. Defaults parameters presents post prior. match_exact Logical indicating whether parameters matched exactly (e.g. p match p\\[1\\]). lb Name column prior post corresponding lower bound error bar ub Name column prior post corresponding upper bound error bar remove_index_prior Whether remove index variable prior except first one. useful parameter multiple index prior distribution (e.g. subject parameters, prior contain many subjects post computational reasons).","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/prior_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare prior to posterior — prior_posterior","text":"combine_prior_posterior returns dataframe columns prior post column Distribution. compute_prior_influence returns dataframe columns: Variable, Index, PostShrinkage, DistPrior. plot_prior_posterior plot_prior_influence returns ggplot object.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/prior_posterior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare prior to posterior — prior_posterior","text":"Posterior shrinkage (PostShrinkage = 1 - Var(Post) / Var(Prior)), capturing much model learning. Shrinkage near 0 indicates data provides little information beyond prior. Shrinkage near 1 indicates data much informative prior. 'Mahalanobis' distance mean posterior prior (DistPrior), capturing whether prior \"includes\" posterior.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/prior_posterior.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compare prior to posterior — prior_posterior","text":"plot_prior_posterior, parameters name different indices plotted together. prior distribution , can useful keep one index prior. , can use match_exact = FALSE plot parameter[1] parameter[2] separately.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/prior_posterior.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compare prior to posterior — prior_posterior","text":"M. Betancourt, “Towards Principled Bayesian Workflow”, 2018.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/prior_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare prior to posterior — prior_posterior","text":"","code":"library(dplyr)  prior <- data.frame(   Variable = c(\"a\", \"b\"),   Mean = c(0, 0),   sd = c(10, 5),   Index = c(NA, NA) ) %>%   mutate(     `5%` = qnorm(.05, mean = Mean, sd = sd),     `95%` = qnorm(.95, mean = Mean, sd = sd)   )  post <- data.frame(   Variable = c(\"a\", \"a\", \"b\"),   Mean = c(-1, 1, 2),   sd = c(3, 4, 1),   Index = c(1, 2, NA) ) %>%   mutate(     `5%` = qnorm(.05, mean = Mean, sd = sd),     `95%` = qnorm(.95, mean = Mean, sd = sd)   )  plot_prior_posterior(prior, post)   plot_prior_influence(prior, post, pars = c(\"a\", \"b\"))"},{"path":"https://ghurault.github.io/HuraultMisc/reference/process_replications.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract posterior predictive distribution — process_replications","title":"Extract posterior predictive distribution — process_replications","text":"Extract posterior predictive distribution","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/process_replications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract posterior predictive distribution — process_replications","text":"","code":"process_replications(   fit,   idx = NULL,   parName,   bounds = NULL,   type = c(\"continuous\", \"discrete\", \"eti\", \"hdi\"),   ... )"},{"path":"https://ghurault.github.io/HuraultMisc/reference/process_replications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract posterior predictive distribution — process_replications","text":"fit Stanfit object. idx Dataframe translating indices parameters informative variable (can NULL). parName Name parameter extract. bounds NULL vector length 2 representing bounds distribution needs truncated. type Indicates distribution summarised. ... Parameters passed extract_distribution().","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/process_replications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract posterior predictive distribution — process_replications","text":"Dataframe.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/summary_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract summary statistics — summary_statistics","title":"Extract summary statistics — summary_statistics","text":"Extract summary statistics","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/summary_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract summary statistics — summary_statistics","text":"","code":"summary_statistics(fit, pars, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))"},{"path":"https://ghurault.github.io/HuraultMisc/reference/summary_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract summary statistics — summary_statistics","text":"fit Stanfit object. pars Character vector parameters extract. Defaults parameters. probs Numeric vector quantiles extract.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/summary_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract summary statistics — summary_statistics","text":"Dataframe posterior summary statistics","code":""},{"path":"https://ghurault.github.io/HuraultMisc/reference/summary_statistics.html","id":"alternative","dir":"Reference","previous_headings":"","what":"Alternative","title":"Extract summary statistics — summary_statistics","text":"tidybayes package offers alternative function, example: fit %>% tidy_draws() %>% gather_variables() %>% mean_qi(). However, provide information Rhat Neff, process indexes. tidybayes package useful summarising distribution handful parameters (using tidybayes::spread_draws()).","code":""},{"path":[]},{"path":"https://ghurault.github.io/HuraultMisc/news/index.html","id":"huraultmisc-120","dir":"Changelog","previous_headings":"","what":"HuraultMisc 1.2.0","title":"HuraultMisc 1.2.0","text":"Add compute_rsquared compute Bayesian R-squared posterior replications. Remove illustrations (moved separate repository). Add pkgdown website.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/news/index.html","id":"huraultmisc-112","dir":"Changelog","previous_headings":"","what":"HuraultMisc 1.1.2","title":"HuraultMisc 1.1.2","text":"Fix error using cbbPalette lazy-loading. change_colnames() now deprecated. Configure spell check update documentation.","code":""},{"path":"https://ghurault.github.io/HuraultMisc/news/index.html","id":"huraultmisc-111","dir":"Changelog","previous_headings":"","what":"HuraultMisc 1.1.1","title":"HuraultMisc 1.1.1","text":"CRAN release: 2021-09-06 First CRAN release, Added NEWS.md file track changes package.","code":""}]
